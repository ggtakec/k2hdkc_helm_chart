{{-
/*
*
* K2HDKC DBaaS Helm Chart
*
* Copyright 2022 Yahoo Japan Corporation.
*
* K2HDKC DBaaS is a DataBase as a Service provided by Yahoo! JAPAN
* which is built K2HR3 as a backend and provides services in
* cooperation with Kubernetes.
* The Override configuration for K2HDKC DBaaS serves to connect the
* components that make up the K2HDKC DBaaS. K2HDKC, K2HR3, CHMPX,
* and K2HASH are components provided as AntPickax.
*
* For the full copyright and license information, please view
* the license file that was distributed with this source code.
*
* AUTHOR:   Takeshi Nakatani
* CREATE:   Fri Jan 21 2021
* REVISION:
*
*/ -}}

{{-
/*---------------------------------------------------------
* The following variables are replaced.
*
*   K2HR3_API_URL           K2HR3 REST API server URL
*                           (ex. https://k2hr3api.default.svc.cluster.local:30443/)
*   K2HDKC_DOMAIN           domain name for kubernetes
*                           (ex. svc.cluster.local)
*   K2HDKC_CLUSTER_NAME     Cluster name for K2HDKC dbaas
*                           (ex. k2hdkc)
*   K2HKDC_SLAVE_CTLPORT    Slave control port for K2HDKC
*                           dbaas (ex. 8022)
*   K2HDKC_SLAVE_COUNT      Slave count for K2HDKC dbaas
*                           (ex. 2)
*
*---------------------------------------------------------
* The following variables are set static or from pod information.
*
*   K2HDKC_MODE                 static value "slave"
*   K2HDKC_NODE_NAME            load from spec.nodeName
*   K2HDKC_POD_NAME             load from metadata.name
*   K2HDKC_NAMESPACE            load from metadata.namespace
*   K2HDKC_POD_IP               load from status.podIP
*   K2HDKC_POD_SERVICE_ACCOUNT  load from spec.serviceAccountName
*   K2HDKC_NODE_IP              load from status.hostIP
*   K2HDKC_POD_ID               load from metadata.uid
*
*---------------------------------------------------------
* Mount static directory, configmap and secret
*
*   antpickax-etc-volume        For /etc/antpickax
*   antpickax-var-lib-volume    For /var/lib/antpickax
*   antpickax-var-run-volume    For /var/run/antpickax
*   configmap-<cluster name> 	dbaas configmap to "/configmap"
*   secret-<cluster name>-certs secret for all nodes certificates
*                               to "/secret-certs"
*   secret-<cluster name>-k2hr3-token
*                               secret for k2hr3 role token file
*                               to "/secret-k2hr3-token"
*
*/ -}}

---
apiVersion: v1
kind: Service
metadata:
  name: slvsvc-{{ include "k2hdkc.clusterName" . }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: "k2hdkc-slave-ctlport"
      protocol: "TCP"
      port: {{ .Values.dbaas.slave.ctlport }}
      targetPort: {{ .Values.dbaas.slave.ctlport }}
  selector:
    app: {{ include "k2hdkc.clusterName" . }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: slvpod-{{ include "k2hdkc.clusterName" . }}
spec:
  podManagementPolicy: OrderedReady
  serviceName: slvsvc-{{ include "k2hdkc.clusterName" . }}
  replicas: {{ .Values.dbaas.slave.count }}
  selector:
    matchLabels:
      app: {{ include "k2hdkc.clusterName" . }}
  template:
    metadata:
      labels:
        app: {{ include "k2hdkc.clusterName" . }}
    spec:
      volumes:
        - name: antpickax-etc-volume
          emptyDir:
            medium: Memory
        - name: antpickax-var-lib-volume
          emptyDir:
            medium: Memory
        - name: antpickax-var-run-volume
          emptyDir:
            medium: Memory
        - name: configmap-{{ include "k2hdkc.clusterName" . }}
          configMap:
            name: configmap-{{ include "k2hdkc.clusterName" . }}
            items:
              - key: dbaas-k2hdkc-variables-setup.sh
                path: dbaas-k2hdkc-variables-setup.sh
              - key: dbaas-k2hdkc-k2hr3-registration.sh
                path: dbaas-k2hdkc-k2hr3-registration.sh
              - key: dbaas-k2hdkc-ini-update.sh
                path: dbaas-k2hdkc-ini-update.sh
              - key: dbaas-k2hdkc-chmpxproc-wrap.sh
                path: dbaas-k2hdkc-chmpxproc-wrap.sh
              - key: dbaas-setup-certificate.sh
                path: dbaas-setup-certificate.sh
              - key: dbaas-k2hdkc-dummyslave.sh
                path: dbaas-k2hdkc-dummyslave.sh
              {{- range .Values.dbaas.slave.files }}
              {{- $pathparts := splitList "/" . }}
              {{- $filename := "" }}
              {{- range $pathparts }}
              {{- $filename = . }}
              {{- end }}
              {{- printf "- key: %s" $filename | nindent 14 }}
              {{- printf "path: %s" $filename | nindent 16 }}
              {{- end }}
              {{- range .Values.dbaas.slave.expandFiles }}
              {{- printf "- key: %s" .key | nindent 14 }}
              {{- printf "path: %s" .key | nindent 16 }}
              {{- end }}
        - name: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
          secret:
            secretName: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
        - name: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token
          secret:
            secretName: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token

      shareProcessNamespace: true

      initContainers:
        - name: slvinit-{{ include "k2hdkc.clusterName" . }}
          image: {{ include "images.initImage" . }}
          env:
            - name: HTTP_PROXY
              value: "{{ include "env.init.httpProxy" . }}"
            - name: HTTPS_PROXY
              value: "{{ include "env.init.httpsProxy" . }}"
            - name: NO_PROXY
              value: "{{ include "env.init.noProxy" . }}"
            - name: http_proxy
              value: "{{ include "env.init.httpProxy" . }}"
            - name: https_proxy
              value: "{{ include "env.init.httpsProxy" . }}"
            - name: DEBIAN_FRONTEND
              value: "noninteractive"
            - name: ANTPICKAX_ETC_DIR
              value: "{{ .Values.antpickax.configDir }}"
            - name: K2HR3_API_URL
              value: "https://{{ include "k2hdkc.r3apiIntSvcFullname" . }}:{{ include "k2hdkc.r3apiIntPort" . }}"
            - name: K2HR3_TENANT
              value: "{{ include "k2hdkc.k2hr3Tenant" . }}"
            - name: K2HDKC_DOMAIN
              value: "{{ include "k2hdkc.dbaasBaseDomain" . }}"
            - name: K2HDKC_CLUSTER_NAME
              value: "{{ include "k2hdkc.clusterName" . }}"
            - name: K2HDKC_MODE
              value: "slave"
            - name: K2HDKC_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K2HDKC_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K2HDKC_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K2HDKC_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: K2HDKC_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: K2HDKC_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: K2HDKC_POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: SEC_CA_MOUNTPOINT
              value: "{{ .Values.mountPoint.ca }}"
            - name: SEC_K2HR3_TOKEN_MOUNTPOINT
              value: "{{ .Values.mountPoint.k2hr3Token }}"
            - name: SEC_UTOKEN_FILENAME
              value: "unscopedToken"
            - name: CERT_PERIOD_DAYS
              value: "{{ include "k2hdkc.certPeriodDays" . }}"

          volumeMounts:
            - mountPath: {{ .Values.antpickax.configDir }}
              name: antpickax-etc-volume
            - mountPath: {{ .Values.mountPoint.configMap }}
              name: configmap-{{ include "k2hdkc.clusterName" . }}
              readOnly: true
            - mountPath: {{ .Values.mountPoint.ca }}
              name: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
              readOnly: true
            - mountPath: {{ .Values.mountPoint.k2hr3Token }}
              name: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token
              readOnly: true
          command: ["/bin/sh"]
          args: ["{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-variables-setup.sh"]

      containers:
        - name: slvupdate-{{ include "k2hdkc.clusterName" . }}
          image: {{ include "images.initImage" . }}
          env:
            - name: HTTP_PROXY
              value: "{{ include "env.init.httpProxy" . }}"
            - name: HTTPS_PROXY
              value: "{{ include "env.init.httpsProxy" . }}"
            - name: NO_PROXY
              value: "{{ include "env.init.noProxy" . }}"
            - name: http_proxy
              value: "{{ include "env.init.httpProxy" . }}"
            - name: https_proxy
              value: "{{ include "env.init.httpsProxy" . }}"
            - name: DEBIAN_FRONTEND
              value: "noninteractive"
          volumeMounts:
            - mountPath: {{ .Values.antpickax.configDir }}
              name: antpickax-etc-volume
            - mountPath: {{ .Values.mountPoint.configMap }}
              name: configmap-{{ include "k2hdkc.clusterName" . }}
              readOnly: true
          command: ["/bin/sh"]
          args: ["{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-ini-update.sh"]
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-k2hr3-registration.sh", "-reg"]
            preStop:
              exec:
                command: ["/bin/sh", "{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-k2hr3-registration.sh", "-del"]

        - name: slvchmpx-{{ include "k2hdkc.clusterName" . }}
          image: {{ include "images.chmpxImage" . }}
          env:
            - name: HTTP_PROXY
              value: "{{ include "env.chmpx.httpProxy" . }}"
            - name: HTTPS_PROXY
              value: "{{ include "env.chmpx.httpsProxy" . }}"
            - name: NO_PROXY
              value: "{{ include "env.chmpx.noProxy" . }}"
            - name: http_proxy
              value: "{{ include "env.chmpx.httpProxy" . }}"
            - name: https_proxy
              value: "{{ include "env.chmpx.httpsProxy" . }}"
            - name: DEBIAN_FRONTEND
              value: "noninteractive"
            - name: K2HDKC_MANUAL_START
              value: "{{ .Values.dbaas.startManual }}"
          volumeMounts:
            - mountPath: {{ .Values.antpickax.configDir }}
              name: antpickax-etc-volume
            - mountPath: /var/lib/antpickax
              name: antpickax-var-lib-volume
            - mountPath: /var/run/antpickax
              name: antpickax-var-run-volume
            - mountPath: {{ .Values.mountPoint.configMap }}
              name: configmap-{{ include "k2hdkc.clusterName" . }}
              readOnly: true
          command: ["/bin/sh"]
          args: ["{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-chmpxproc-wrap.sh"]

        - name: slvk2hdkc-{{ include "k2hdkc.clusterName" . }}
          image: {{ include "k2hdkc.slaveImage" . }}
          env:
            - name: HTTP_PROXY
              value: "{{ include "env.slave.httpProxy" . }}"
            - name: HTTPS_PROXY
              value: "{{ include "env.slave.httpsProxy" . }}"
            - name: NO_PROXY
              value: "{{ include "env.slave.noProxy" . }}"
            - name: http_proxy
              value: "{{ include "env.slave.httpProxy" . }}"
            - name: https_proxy
              value: "{{ include "env.slave.httpsProxy" . }}"
            - name: DEBIAN_FRONTEND
              value: "noninteractive"
            - name: K2HDKC_MANUAL_START
              value: "{{ .Values.dbaas.startManual }}"
          volumeMounts:
            - mountPath: {{ .Values.antpickax.configDir }}
              name: antpickax-etc-volume
            - mountPath: /var/lib/antpickax
              name: antpickax-var-lib-volume
            - mountPath: /var/run/antpickax
              name: antpickax-var-run-volume
            - mountPath: {{ .Values.mountPoint.configMap }}
              name: configmap-{{ include "k2hdkc.clusterName" . }}
              readOnly: true
          {{- include "k2hdkc.slaveCommand" . | nindent 10 }}
          {{- include "k2hdkc.slaveArgs" . | nindent 10 }}

{{-
/*
* Local variables:
* tab-width: 4
* c-basic-offset: 4
* End:
* vim600: noexpandtab sw=4 ts=4 fdm=marker
* vim<600: noexpandtab sw=4 ts=4
*/ -}}
