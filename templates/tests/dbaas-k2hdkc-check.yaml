{{-
/*
*
* K2HDKC DBaaS Helm Chart
*
* Copyright 2022 Yahoo Japan Corporation.
*
* K2HDKC DBaaS is a DataBase as a Service provided by Yahoo! JAPAN
* which is built K2HR3 as a backend and provides services in
* cooperation with Kubernetes.
* The Override configuration for K2HDKC DBaaS serves to connect the
* components that make up the K2HDKC DBaaS. K2HDKC, K2HR3, CHMPX,
* and K2HASH are components provided as AntPickax.
*
* For the full copyright and license information, please view
* the license file that was distributed with this source code.
*
* AUTHOR:   Takeshi Nakatani
* CREATE:   Fri Jan 21 2021
* REVISION:
*
*/ -}}

---
apiVersion: v1
kind: Pod
metadata:
  name: chkpod-{{ include "k2hdkc.clusterName" . }}
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  volumes:
    - name: antpickax-etc-volume
      emptyDir:
        medium: Memory
    - name: antpickax-var-lib-volume
      emptyDir:
        medium: Memory
    - name: antpickax-var-run-volume
      emptyDir:
        medium: Memory
    - name: configmap-{{ include "k2hdkc.clusterName" . }}
      configMap:
        name: configmap-{{ include "k2hdkc.clusterName" . }}
        items:
          - key: dbaas-k2hdkc-variables-setup.sh
            path: dbaas-k2hdkc-variables-setup.sh
          - key: dbaas-k2hdkc-k2hr3-registration.sh
            path: dbaas-k2hdkc-k2hr3-registration.sh
          - key: dbaas-k2hdkc-ini-update.sh
            path: dbaas-k2hdkc-ini-update.sh
          - key: dbaas-setup-certificate.sh
            path: dbaas-setup-certificate.sh
          - key: dbaas-k2hdkc-check.sh
            path: dbaas-k2hdkc-check.sh
    - name: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
      secret:
        secretName: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
    - name: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token
      secret:
        secretName: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token

  shareProcessNamespace: true

  initContainers:
    - name: chkinit-{{ include "k2hdkc.clusterName" . }}
      image: {{ include "images.initImage" . }}
      env:
        - name: HTTP_PROXY
          value: "{{ include "env.init.httpProxy" . }}"
        - name: HTTPS_PROXY
          value: "{{ include "env.init.httpsProxy" . }}"
        - name: NO_PROXY
          value: "{{ include "env.init.noProxy" . }}"
        - name: http_proxy
          value: "{{ include "env.init.httpProxy" . }}"
        - name: https_proxy
          value: "{{ include "env.init.httpsProxy" . }}"
        - name: DEBIAN_FRONTEND
          value: "noninteractive"
        - name: ANTPICKAX_ETC_DIR
          value: "{{ .Values.antpickax.configDir }}"
        - name: K2HR3_API_URL
          value: "https://{{ include "k2hdkc.r3apiIntSvcFullname" . }}:{{ include "k2hdkc.r3apiIntPort" . }}"
        - name: K2HR3_TENANT
          value: "{{ include "k2hdkc.k2hr3Tenant" . }}"
        - name: K2HDKC_DOMAIN
          value: "{{ include "k2hdkc.dbaasBaseDomain" . }}"
        - name: K2HDKC_CLUSTER_NAME
          value: "{{ include "k2hdkc.clusterName" . }}"
        - name: K2HDKC_MODE
          value: "slave"
        - name: K2HDKC_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K2HDKC_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K2HDKC_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K2HDKC_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K2HDKC_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: K2HDKC_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: K2HDKC_POD_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: SEC_CA_MOUNTPOINT
          value: "{{ .Values.mountPoint.ca }}"
        - name: SEC_K2HR3_TOKEN_MOUNTPOINT
          value: "{{ .Values.mountPoint.k2hr3Token }}"
        - name: SEC_UTOKEN_FILENAME
          value: "unscopedToken"
        - name: CERT_PERIOD_DAYS
          value: "{{ include "k2hdkc.certPeriodDays" . }}"

      volumeMounts:
        - mountPath: {{ .Values.antpickax.configDir }}
          name: antpickax-etc-volume
        - mountPath: {{ .Values.mountPoint.configMap }}
          name: configmap-{{ include "k2hdkc.clusterName" . }}
          readOnly: true
        - mountPath: {{ .Values.mountPoint.ca }}
          name: secret-k2hr3-ca-{{ include "k2hdkc.k2hr3ClusterName" . }}
          readOnly: true
        - mountPath: {{ .Values.mountPoint.k2hr3Token }}
          name: secret-{{ include "k2hdkc.clusterName" . }}-k2hr3-token
          readOnly: true
      command: ["/bin/sh"]
      args: ["{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-variables-setup.sh"]

  containers:
    - name: chkk2hdkc-{{ include "k2hdkc.clusterName" . }}
      image: {{ include "images.k2hdkcImage" . }}
      env:
        - name: HTTP_PROXY
          value: "{{ include "env.dkc.httpProxy" . }}"
        - name: HTTPS_PROXY
          value: "{{ include "env.dkc.httpsProxy" . }}"
        - name: NO_PROXY
          value: "{{ include "env.dkc.noProxy" . }}"
        - name: http_proxy
          value: "{{ include "env.dkc.httpProxy" . }}"
        - name: https_proxy
          value: "{{ include "env.dkc.httpsProxy" . }}"
        - name: DEBIAN_FRONTEND
          value: "noninteractive"
        - name: K2HDKC_CLUSTER_NAME
          value: "{{ include "k2hdkc.clusterName" . }}"
        - name: K2HDKC_SERVER_COUNT
          value: "{{ .Values.dbaas.server.count }}"
      volumeMounts:
        - mountPath: {{ .Values.antpickax.configDir }}
          name: antpickax-etc-volume
        - mountPath: /var/lib/antpickax
          name: antpickax-var-lib-volume
        - mountPath: /var/run/antpickax
          name: antpickax-var-run-volume
        - mountPath: {{ .Values.mountPoint.configMap }}
          name: configmap-{{ include "k2hdkc.clusterName" . }}
          readOnly: true
      command: ["/bin/sh"]
      args: ["{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-check.sh"]
      lifecycle:
        postStart:
          exec:
            command: ["/bin/sh", "{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-k2hr3-registration.sh", "-reg"]
        preStop:
          exec:
            command: ["/bin/sh", "{{ .Values.mountPoint.configMap }}/dbaas-k2hdkc-k2hr3-registration.sh", "-del"]

  restartPolicy: Never

{{-
/*
* Local variables:
* tab-width: 4
* c-basic-offset: 4
* End:
* vim600: noexpandtab sw=4 ts=4 fdm=marker
* vim<600: noexpandtab sw=4 ts=4
*/ -}}
